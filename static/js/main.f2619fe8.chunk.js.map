{"version":3,"sources":["components/image/image.js","components/progressiveImage/ProgressiveImage.js","components/imageFrame/imageFrame.js","utils/colors.js","components/exitButton/exitButton.js","components/imgMetrics/imgMetrics.js","components/imageDisplay/imageDisplay.js","assets/at.png","components/spinner/spinner.js","App.js","index.js"],"names":["StlyedImage","styled","img","Image","src","alt","style","className","loading","ProgImage","imgKey","delay","placeholder","filter","StyledFrame","div","inView","ImageFrame","props","setKey","setModalVis","children","setID","imgID","setActiveIdx","getActiveIndex","useInView","triggerOnce","threshold","ref","onClick","colors","black","darkBlue","blue","lightBlue","StyledExit","ExitButton","toggleVis","StyledMetrics","ImageMetrics","likeCount","setLikeCount","handleUnlike","a","fetch","then","res","json","likes","localStorage","removeItem","handleLike","setItem","getItem","StyledDisplay","vis","ImageDisplay","setVis","clearActive","prevImg","nextImg","useState","clearModal","toggleModalOff","e","target","nodeName","includes","useEffect","window","addEventListener","removeEventListener","data","getImageData","StyledSpinner","size","Spinner","StyledApp","App","keys","setKeys","visibleKeys","setVisibleKeys","activeKey","setActiveKey","activeID","setActiveID","activeIdx","imgModal","setModalVisibility","key","map","k","indexOf","previousImage","prevIdx","_id","nextImage","nextIdx","length","slice","getKeys","onkeydown","keyCode","keydown","mapKeys","dataLength","next","hasMore","loader","name","Fragment","at","scroller","scrollTo","smooth","offset","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2619fe8.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StlyedImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  transition: filter 300ms ease-in, opacity 300ms ease-in;\n`;\n\nexport default function Image({ src, alt, style, className }) {\n  return (\n    <StlyedImage\n      src={src}\n      alt={alt || \"desc\"}\n      style={style ? style : {}}\n      className={className ? className + \" image\" : \"image\"}\n      loading=\"lazy\"\n    />\n  );\n}\n","import ProgressiveImage from \"react-progressive-image\";\nimport Image from \"./../image/image\";\n\nexport default function ProgImage({ imgKey }) {\n  return (\n    <ProgressiveImage\n      delay={1000}\n      src={`https://stormy-shore-10716.herokuapp.com/images/${imgKey}`}\n      placeholder={`https://stormy-shore-10716.herokuapp.com/images/tiny-${imgKey}`}\n    >\n      {(src, loading) => (\n        <Image\n          src={src}\n          style={{ filter: loading ? \"blur(20px)\" : \"blur(0px)\" }}\n        />\n      )}\n    </ProgressiveImage>\n  );\n}\n","import styled from \"styled-components\";\nimport { useInView } from \"react-intersection-observer\";\n\nconst StyledFrame = styled.div`\n  overflow: hidden;\n  height: 200px;\n  transition: opacity 300ms ease-in;\n  opacity: ${({ inView }) => (inView ? 100 : 0)};\n  cursor: pointer;\n\n  &:hover,\n  &:active {\n    z-index: 2;\n    filter: brightness(0.7);\n  }\n\n  @media (max-width: 540px) {\n    height: 100px;\n  }\n`;\n\nexport default function ImageFrame(props) {\n  const {\n    imgKey,\n    setKey,\n    setModalVis,\n    children,\n    setID,\n    imgID,\n    setActiveIdx,\n    getActiveIndex,\n  } = props;\n\n  const { ref, inView } = useInView({\n    triggerOnce: true,\n    threshold: 0.3,\n  });\n\n  const handleClick = () => {\n    setKey(imgKey);\n    setID(imgID);\n    setActiveIdx(getActiveIndex(imgKey));\n    setModalVis(true);\n  };\n\n  return (\n    <StyledFrame ref={ref} inView={inView} onClick={handleClick}>\n      {children}\n    </StyledFrame>\n  );\n}\n","const colors = {\n  black: \"#1b262c\",\n  darkBlue: \"#0f4c75\",\n  blue: \"#3282b8\",\n  lightBlue: \"#bbe1fa\",\n};\n\nexport default colors;\n","import styled from \"styled-components\";\n\nconst StyledExit = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background: #aaa4;\n  height: 40px;\n  width: 40px;\n\n  span {\n    display: block;\n    width: 15px;\n    height: 2px;\n    background: #777;\n\n    &:first-child {\n      transform: rotate(45deg);\n      position: absolute;\n    }\n    &:last-child {\n      transform: rotate(-45deg);\n      position: absolute;\n    }\n  }\n\n  &:hover,\n  &:active {\n    cursor: pointer;\n    background: #aaa7;\n\n    span {\n      background: #333;\n    }\n  }\n`;\n\nexport default function ExitButton({ toggleVis }) {\n  return (\n    <StyledExit onClick={toggleVis}>\n      <span />\n      <span />\n    </StyledExit>\n  );\n}\n","import styled from \"styled-components\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport colors from \"./../../utils/colors\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst StyledMetrics = styled.div`\n  padding: 10px;\n  display: flex;\n  align-items: flex-start;\n\n  button {\n    background: none;\n  }\n\n  .icon {\n    cursor: pointer;\n    font-size: 1.5rem;\n    color: ${colors.blue};\n  }\n\n  p {\n    font-size: 16px;\n    margin-left: 4px;\n    color: ${colors.lightBlue};\n  }\n`;\n\nexport default function ImageMetrics({ likeCount, setLikeCount, imgID }) {\n  const handleUnlike = async () => {\n    await fetch(\n      \"https://stormy-shore-10716.herokuapp.com/photos/unlike/\" + imgID\n    ).then(async (res) => {\n      const { likes } = await res.json();\n      setLikeCount(likes);\n      localStorage.removeItem(imgID);\n    });\n  };\n\n  const handleLike = async () => {\n    await fetch(\n      \"https://stormy-shore-10716.herokuapp.com/photos/like/\" + imgID\n    ).then(async (res) => {\n      const { likes } = await res.json();\n      setLikeCount(likes);\n      localStorage.setItem(imgID, true);\n    });\n  };\n\n  const handleClick = () => {\n    if (localStorage.getItem(imgID) === \"true\") handleUnlike();\n    else handleLike();\n  };\n\n  return (\n    <StyledMetrics>\n      <button onClick={handleClick}>\n        <AiFillHeart className=\"icon\" />\n      </button>\n      {likeCount || likeCount !== null ? <p>{likeCount}</p> : <Skeleton />}\n    </StyledMetrics>\n  );\n}\n","import styled from \"styled-components\";\nimport Image from \"./../image/image\";\nimport { useEffect, useState } from \"react\";\nimport colors from \"./../../utils/colors\";\nimport ExitButton from \"./../exitButton/exitButton\";\nimport ImageMetrics from \"./../imgMetrics/imgMetrics\";\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\";\n\nconst StyledDisplay = styled.div`\n  display: ${({ vis }) => (vis ? \"flex\" : \"none\")};\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  z-index: 3;\n  height: 100vh;\n  width: 100vw;\n  background: #000a;\n\n  img {\n    height: fit-content;\n    max-height: 90vh;\n    object-fit: cover;\n  }\n\n  img[src=\"\"] {\n    display: none;\n  }\n\n  .display-wrap {\n    margin: auto 5px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    background: ${colors.black};\n    border-radius: 16px;\n    overflow: hidden;\n    box-shadow: 0 0 1.4px #0008, 0 0 2.5px #0008, 0 0 7px #0008, 0 0 14px #0002;\n  }\n\n  @media (max-width: 768px) {\n    .display-wrap {\n      margin: auto 15px;\n    }\n  }\n\n  .content-wrap {\n    height: 100%;\n    overflow-y: scroll;\n    scrollbar-width: none;\n    position: relative;\n    z-index: 2;\n  }\n\n  .direct-btn {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 60px;\n    background: transparent;\n    cursor: pointer;\n    position: absolute;\n    top: 0;\n    outline: none;\n\n    &:hover .icon-left,\n    &:hover .icon-right,\n    &:active .icon-left,\n    &:active .icon-right {\n      color: ${colors.blue};\n      transition: color 50ms ease;\n    }\n\n    &:focus .icon-left,\n    &:focus .icon-right {\n      color: ${colors.blue};\n      transition: color 50ms ease;\n    }\n  }\n\n  .prev {\n    left: 0;\n  }\n\n  .next {\n    right: 0;\n  }\n\n  .icon-left,\n  .icon-right {\n    font-size: 40px;\n    color: ${colors.black}aa;\n  }\n\n  @media (max-width: 1068px) {\n    width: fit-content;\n  }\n`;\n\nexport default function ImageDisplay(props) {\n  const { vis, setVis, imgKey, imgID, clearActive, prevImg, nextImg } = props;\n\n  const baseUrl = \"https://stormy-shore-10716.herokuapp.com/images/\";\n  const [likeCount, setLikeCount] = useState(null);\n\n  const clearModal = () => {\n    setVis(false);\n    clearActive();\n  };\n\n  const toggleModalOff = (e) => {\n    if (e.target.nodeName === \"path\") return;\n    if (e.target.nodeName === \"svg\") return;\n    if (e.target.className.includes(\"img-frame\")) {\n      clearModal();\n    }\n  };\n\n  useEffect(() => {\n    if (vis) {\n      window.addEventListener(\"click\", toggleModalOff);\n    } else {\n      return;\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", toggleModalOff);\n    };\n  });\n\n  useEffect(() => {\n    async function getImageData() {\n      const res = await fetch(\n        \"https://stormy-shore-10716.herokuapp.com/photos/\" + imgID\n      );\n      const data = await res.json();\n\n      setLikeCount(data.likes);\n    }\n\n    if (imgID) getImageData();\n  }, [imgID]);\n\n  return (\n    <StyledDisplay vis={vis} className=\"img-frame\">\n      <div className=\"display-wrap\">\n        <button onClick={prevImg} className=\"direct-btn prev\">\n          <BsChevronLeft className=\"icon-left\" />\n        </button>\n        <Image src={imgKey ? baseUrl + imgKey : \"\"} />\n        <button onClick={nextImg} className=\"direct-btn next\">\n          <BsChevronRight className=\"icon-right\" />\n        </button>\n        <ExitButton toggleVis={clearModal} />\n        <div className=\"content-wrap\">\n          <ImageMetrics\n            likeCount={likeCount}\n            setLikeCount={setLikeCount}\n            imgID={imgID}\n          />\n        </div>\n      </div>\n    </StyledDisplay>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/at.7784889c.png\";","import styled from \"styled-components\";\nimport { ImSpinner9 } from \"react-icons/im\";\nimport colors from \"./../../utils/colors\";\n\nconst StyledSpinner = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  .spinner {\n    color: ${colors.blue};\n    font-size: ${({ size }) => size}px;\n    animation: rotate 3s cubic-bezier(0.79, 0.14, 0.15, 0.86) infinite;\n  }\n\n  @keyframes rotate {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default function Spinner({ size = 40 }) {\n  return (\n    <StyledSpinner size={size}>\n      <ImSpinner9 className=\"spinner\" />\n    </StyledSpinner>\n  );\n}\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport ProgressiveImage from \"./components/progressiveImage/ProgressiveImage\";\nimport ImageFrame from \"./components/imageFrame/imageFrame\";\nimport colors from \"./utils/colors\";\nimport ImageDisplay from \"./components/imageDisplay/imageDisplay\";\nimport at from \"./assets/at.png\";\nimport { BsChevronDown } from \"react-icons/bs\";\nimport { Element, scroller } from \"react-scroll\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Spinner from \"./components/spinner/spinner\";\n\nconst StyledApp = styled.div`\n  .img-wrap {\n    display: grid;\n    gap: 2px;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    grid-auto-flow: row;\n    justify-content: center;\n    width: 98%;\n    margin: 0 auto;\n  }\n\n  section {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    color: ${colors.blue};\n\n    img {\n      margin-top: 50px;\n    }\n\n    h1 {\n      margin: 0 30px;\n      margin-top: 70px;\n      max-width: 500px;\n      text-align: center;\n      font-size: 1.5em;\n    }\n\n    .icon-wrap {\n      height: 100%;\n      width: 100%;\n      padding-bottom: 80px;\n      display: flex;\n      align-items: flex-end;\n      justify-content: center;\n    }\n\n    .icon-down {\n      font-size: 50px;\n      cursor: pointer;\n\n      &:hover,\n      &:active {\n        color: ${colors.lightBlue};\n        transition: color 300ms ease;\n      }\n    }\n  }\n\n  @media (min-width: 1080px) {\n    .img-wrap {\n      width: 80%;\n    }\n  }\n\n  @media (max-width: 540px) {\n    .img-wrap {\n      width: 99%;\n      grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));\n    }\n  }\n`;\n\nfunction App() {\n  const [keys, setKeys] = useState(null);\n  const [visibleKeys, setVisibleKeys] = useState([]);\n  const [activeKey, setActiveKey] = useState(null);\n  const [activeID, setActiveID] = useState(null);\n  const [activeIdx, setActiveIdx] = useState(getActiveIndex());\n  const [imgModal, setModalVisibility] = useState(false);\n\n  function getActiveIndex(key) {\n    if (!keys || !key) return null;\n\n    return keys.map((k) => k.key).indexOf(key);\n  }\n\n  const previousImage = () => {\n    const prevIdx = activeIdx === 0 ? 0 : activeIdx - 1;\n    const prevImg = keys[prevIdx];\n    setActiveKey(prevImg.key);\n    setActiveID(prevImg._id);\n    setActiveIdx(prevIdx);\n  };\n\n  const nextImage = () => {\n    const nextIdx = activeIdx === keys.length - 1 ? activeIdx : activeIdx + 1;\n    const nextImg = keys[nextIdx];\n    setActiveKey(nextImg.key);\n    setActiveID(nextImg._id);\n    setActiveIdx(nextIdx);\n  };\n\n  const clearActive = () => {\n    setActiveID(null);\n    setActiveKey(null);\n    setActiveIdx(null);\n  };\n\n  const scrollToTarget = () => {\n    scroller.scrollTo(\"scroll-target\", {\n      smooth: \"easeOutCubic\",\n      offset: -20,\n    });\n  };\n\n  useEffect(() => {\n    async function getKeys() {\n      const res = await fetch(\n        \"https://stormy-shore-10716.herokuapp.com/photos\"\n      );\n      const data = await res.json();\n      setKeys(data);\n      setVisibleKeys(data.slice(0, 10));\n    }\n\n    getKeys();\n  }, []);\n\n  useEffect(() => {\n    window.onkeydown = handleKeyPress;\n\n    function handleKeyPress(e) {\n      if (e.keyCode === 37) previousImage();\n      if (e.keyCode === 39) nextImage();\n    }\n\n    return () => {\n      window.keydown = null;\n    };\n  });\n\n  const fetchNextKeySet = () => {\n    setVisibleKeys(keys.slice(0, visibleKeys.length + 10));\n  };\n\n  const mapKeys = keys && (\n    <InfiniteScroll\n      dataLength={visibleKeys.length}\n      next={fetchNextKeySet}\n      hasMore={visibleKeys.length !== keys.length}\n      loader={<Spinner size={30} />}\n      className=\"img-wrap\"\n      name=\"scroll-target\"\n    >\n      {visibleKeys.map(({ _id, key }) => (\n        <React.Fragment key={_id}>\n          <ImageFrame\n            activeIdx={activeIdx}\n            setActiveIdx={setActiveIdx}\n            getActiveIndex={getActiveIndex}\n            setKey={setActiveKey}\n            setID={setActiveID}\n            setModalVis={setModalVisibility}\n            imgKey={key}\n            imgID={_id}\n          >\n            <ProgressiveImage imgKey={key} />\n          </ImageFrame>\n        </React.Fragment>\n      ))}\n    </InfiniteScroll>\n  );\n\n  return (\n    <StyledApp>\n      <section>\n        <img src={at} alt={\"AT\"} />\n        <h1>A collection of photos taken during my 2019 thru-hike attempt</h1>\n        <div className=\"icon-wrap\">\n          <BsChevronDown className=\"icon-down\" onClick={scrollToTarget} />\n        </div>\n      </section>\n      <Element name=\"scroll-target\" />\n      {mapKeys || <Spinner />}\n      <ImageDisplay\n        vis={imgModal}\n        imgKey={activeKey}\n        imgID={activeID}\n        setVis={setModalVisibility}\n        clearActive={clearActive}\n        prevImg={previousImage}\n        nextImg={nextImage}\n      />\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport colors from \"./utils/colors\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-family: 'Noto Sans', sans-serif;\n  }\n\n  body {\n    background: ${colors.black};\n\n    button,\n    input[type=\"submit\"] {\n      border-style: none;\n      border: none;\n      background: ${colors.blue};\n      color: ${colors.lightBlue};\n    }\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}